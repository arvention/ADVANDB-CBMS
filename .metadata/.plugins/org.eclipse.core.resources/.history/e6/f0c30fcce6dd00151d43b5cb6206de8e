package mvc;

import java.awt.CardLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.JSpinner;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.table.DefaultTableModel;

import database.FacadeDatabase;

public class Controller {
	private static final Controller controller = new Controller(View.getInstance(), ModelTable.getInstance(), FacadeDatabase.getInstance());
	
	private final String TRUE = "1";
	private final String FALSE = "2";
	
	private final View view;
	private final ModelTable modelTable;
	private final FacadeDatabase facadeDatabase;
	
	public static Controller getInstance(){
		return controller;
	}
	
	public Controller(View view, ModelTable modelTable, FacadeDatabase facadeDatabase){
		this.view = view;
		this.modelTable = modelTable;
		this.facadeDatabase = facadeDatabase;
		addListeners();
		
		this.view.setVisible(true);
	}

	public View getView() {
		return view;
	}

	public ModelTable getModelTable() {
		return modelTable;
	}
	
	public FacadeDatabase getFacadeDatabase() {
		return facadeDatabase;
	}
	
	public void addListeners(){
		view.getButtonQuery1().addMouseListener(new MouseAdapter(){
			public void mouseClicked(MouseEvent e) {
				CardLayout cardLayout = (CardLayout) view.getContentPane().getLayout();
				cardLayout.show(view.getContentPane(), "panel_query1");
		      }
		});
		
		view.getButtonQuery2().addMouseListener(new MouseAdapter(){
			public void mouseClicked(MouseEvent e) {
				CardLayout cardLayout = (CardLayout) view.getContentPane().getLayout();
				cardLayout.show(view.getContentPane(), "panel_query2");
		      }
		});
		
		view.getButtonQuery1Back().addMouseListener(new MouseAdapter(){
			public void mouseClicked(MouseEvent e) {
				CardLayout cardLayout = (CardLayout) view.getContentPane().getLayout();
				cardLayout.show(view.getContentPane(), "panel_main");
		      }
		});
		
		view.getSpinnerQuery1BagyoFrequencyLower().addChangeListener(new ChangeListener() {

			@Override
			public void stateChanged(ChangeEvent e) {
				changeUpperBound(view.getSpinnerQuery1BagyoFrequencyLower(), view.getSpinnerQuery1BagyoFrequencyUpper());
			}
        });
		
		view.getSpinnerQuery1BagyoFrequencyUpper().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent e) {
				changeLowerBound(view.getSpinnerQuery1BagyoFrequencyLower(), view.getSpinnerQuery1BagyoFrequencyUpper());
			}
		});
		
		view.getSpinnerQuery1BahaFrequencyLower().addChangeListener(new ChangeListener() {

			@Override
			public void stateChanged(ChangeEvent e) {
				changeUpperBound(view.getSpinnerQuery1BahaFrequencyLower(), view.getSpinnerQuery1BahaFrequencyUpper());
			}
        });
		
		view.getSpinnerQuery1BahaFrequencyUpper().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent e) {
				changeLowerBound(view.getSpinnerQuery1BahaFrequencyLower(), view.getSpinnerQuery1BahaFrequencyUpper());
			}
		});
		
		view.getSpinnerQuery1TagtuyotFrequencyLower().addChangeListener(new ChangeListener() {

			@Override
			public void stateChanged(ChangeEvent e) {
				changeUpperBound(view.getSpinnerQuery1TagtuyotFrequencyLower(), view.getSpinnerQuery1TagtuyotFrequencyUpper());
			}
        });
		
		view.getSpinnerQuery1TagtuyotFrequencyUpper().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent e) {
				changeLowerBound(view.getSpinnerQuery1TagtuyotFrequencyLower(), view.getSpinnerQuery1TagtuyotFrequencyUpper());
			}
		});
		
		view.getSpinnerQuery1LindolFrequencyLower().addChangeListener(new ChangeListener() {

			@Override
			public void stateChanged(ChangeEvent e) {
				changeUpperBound(view.getSpinnerQuery1LindolFrequencyLower(), view.getSpinnerQuery1LindolFrequencyUpper());
			}
        });
		
		view.getSpinnerQuery1LindolFrequencyUpper().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent e) {
				changeLowerBound(view.getSpinnerQuery1LindolFrequencyLower(), view.getSpinnerQuery1LindolFrequencyUpper());
			}
		});
		
		view.getSpinnerQuery1BulkanFrequencyLower().addChangeListener(new ChangeListener() {

			@Override
			public void stateChanged(ChangeEvent e) {
				changeUpperBound(view.getSpinnerQuery1BulkanFrequencyLower(), view.getSpinnerQuery1BulkanFrequencyUpper());
			}
        });
		
		view.getSpinnerQuery1BulkanFrequencyUpper().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent e) {
				changeLowerBound(view.getSpinnerQuery1BulkanFrequencyLower(), view.getSpinnerQuery1BulkanFrequencyUpper());
			}
		});
		
		view.getSpinnerQuery1LandslideFrequencyLower().addChangeListener(new ChangeListener() {

			@Override
			public void stateChanged(ChangeEvent e) {
				changeUpperBound(view.getSpinnerQuery1LandslideFrequencyLower(), view.getSpinnerQuery1LandslideFrequencyUpper());
			}
        });
		
		view.getSpinnerQuery1LandslideFrequencyUpper().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent e) {
				changeLowerBound(view.getSpinnerQuery1LandslideFrequencyLower(), view.getSpinnerQuery1LandslideFrequencyUpper());
			}
		});
		
		view.getSpinnerQuery1TsunamiFrequencyLower().addChangeListener(new ChangeListener() {

			@Override
			public void stateChanged(ChangeEvent e) {
				changeUpperBound(view.getSpinnerQuery1TsunamiFrequencyLower(), view.getSpinnerQuery1TsunamiFrequencyUpper());
			}
        });
		
		view.getSpinnerQuery1TsunamiFrequencyUpper().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent e) {
				changeLowerBound(view.getSpinnerQuery1TsunamiFrequencyLower(), view.getSpinnerQuery1TsunamiFrequencyUpper());
			}
		});
		
		view.getSpinnerQuery1SunogFrequencyLower().addChangeListener(new ChangeListener() {

			@Override
			public void stateChanged(ChangeEvent e) {
				changeUpperBound(view.getSpinnerQuery1SunogFrequencyLower(), view.getSpinnerQuery1SunogFrequencyUpper());
			}
        });
		
		view.getSpinnerQuery1SunogFrequencyUpper().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent e) {
				changeLowerBound(view.getSpinnerQuery1SunogFrequencyLower(), view.getSpinnerQuery1SunogFrequencyUpper());
			}
		});
		
		view.getSpinnerQuery1ForestFireFrequencyLower().addChangeListener(new ChangeListener() {

			@Override
			public void stateChanged(ChangeEvent e) {
				changeUpperBound(view.getSpinnerQuery1ForestFireFrequencyLower(), view.getSpinnerQuery1ForestFireFrequencyUpper());
			}
        });
		
		view.getSpinnerQuery1ForestFireFrequencyUpper().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent e) {
				changeLowerBound(view.getSpinnerQuery1ForestFireFrequencyLower(), view.getSpinnerQuery1ForestFireFrequencyUpper());
			}
		});
		
		view.getSpinnerQuery1DigmaanFrequencyLower().addChangeListener(new ChangeListener() {

			@Override
			public void stateChanged(ChangeEvent e) {
				changeUpperBound(view.getSpinnerQuery1DigmaanFrequencyLower(), view.getSpinnerQuery1DigmaanFrequencyUpper());
			}
        });
		
		view.getSpinnerQuery1DigmaanFrequencyUpper().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent e) {
				changeLowerBound(view.getSpinnerQuery1DigmaanFrequencyLower(), view.getSpinnerQuery1DigmaanFrequencyUpper());
			}
		});
		
		view.getButtonQuery1Query().addMouseListener(new MouseAdapter(){
			public void mouseClicked(MouseEvent e) {
				
				String sql = query1Builder();
				System.out.println(sql);
				
				long startTime = System.nanoTime();
				facadeDatabase.getResult(sql, modelTable);
				long endTime = System.nanoTime() - startTime;
				double seconds = endTime / 1.0E09;
				
				view.getLabelQuery1Status().setText("Running time: " + seconds + " seconds");
				DefaultTableModel dtm = new DefaultTableModel(modelTable.getData(), modelTable.getColumnName());
				view.getTableQuery1ResultTable().setModel(dtm);
			}
		});
		
		view.getButtonQuery2Back().addMouseListener(new MouseAdapter(){
			public void mouseClicked(MouseEvent e){
				CardLayout cardLayout = (CardLayout)view.getContentPane().getLayout();
				cardLayout.show(view.getContentPane(), "panel_main");
			}
		});
		
		view.getSpinnerQuery2SLPNumLower().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeUpperBound(view.getSpinnerQuery2SLPNumLower(), view.getSpinnerQuery2SLPNumUpper());
			}
		});
		
		view.getSpinnerQuery2SLPNumUpper().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeLowerBound(view.getSpinnerQuery2SLPNumLower(), view.getSpinnerQuery2SLPNumUpper());
			}
		});
		
		view.getSpinnerQuery2FFSPNumLower().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeUpperBound(view.getSpinnerQuery2FFSPNumLower(), view.getSpinnerQuery2FFSPNumUpper());
			}
		});
		
		view.getSpinnerQuery2FFSPNumUpper().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeLowerBound(view.getSpinnerQuery2FFSPNumLower(), view.getSpinnerQuery2FFSPNumUpper());
			}
		});
		
		view.getSpinnerQuery2FFWPNumLower().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeUpperBound(view.getSpinnerQuery2FFWPNumLower(), view.getSpinnerQuery2FFWPNumUpper());
			}
		});
		
		view.getSpinnerQuery2FFWPNumUpper().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeLowerBound(view.getSpinnerQuery2FFWPNumLower(), view.getSpinnerQuery2FFWPNumUpper());
			}
		});
		
		view.getSpinnerQuery2CFWPNumLower().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeUpperBound(view.getSpinnerQuery2CFWPNumLower(), view.getSpinnerQuery2CFWPNumUpper());
			}
		});
		
		view.getSpinnerQuery2CFWPNumUpper().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeLowerBound(view.getSpinnerQuery2CFWPNumLower(), view.getSpinnerQuery2CFWPNumUpper());
			}
		});
		
		view.getSpinnerQuery2SPISCNumLower().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeUpperBound(view.getSpinnerQuery2SPISCNumLower(), view.getSpinnerQuery2SPISCNumUpper());
			}
		});
		
		view.getSpinnerQuery2SPISCNumUpper().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeLowerBound(view.getSpinnerQuery2SPISCNumLower(), view.getSpinnerQuery2SPISCNumUpper());
			}
		});
		
		view.getSpinnerQuery2CCTNumLower().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeUpperBound(view.getSpinnerQuery2CCTNumLower(), view.getSpinnerQuery2CCTNumUpper());
			}
		});
		
		view.getSpinnerQuery2CCTNumUpper().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeLowerBound(view.getSpinnerQuery2CCTNumLower(), view.getSpinnerQuery2CCTNumUpper());
			}
		});
		
		view.getSpinnerQuery2ARCDPNumLower().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeUpperBound(view.getSpinnerQuery2ARCDPNumLower(), view.getSpinnerQuery2ARCDPNumUpper());
			}
		});
		
		view.getSpinnerQuery2ARCDPNumUpper().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeLowerBound(view.getSpinnerQuery2ARCDPNumLower(), view.getSpinnerQuery2ARCDPNumUpper());
			}
		});
		
		view.getSpinnerQuery2CBEPNumLower().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeUpperBound(view.getSpinnerQuery2CBEPNumLower(), view.getSpinnerQuery2CBEPNumUpper());
			}
		});
		
		view.getSpinnerQuery2CBEPNumUpper().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeLowerBound(view.getSpinnerQuery2CBEPNumLower(), view.getSpinnerQuery2CBEPNumUpper());
			}
		});
		
		view.getSpinnerQuery2PHOFWNumLower().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeUpperBound(view.getSpinnerQuery2PHOFWNumLower(), view.getSpinnerQuery2PHOFWNumUpper());
			}
		});
		
		view.getSpinnerQuery2PHOFWNumUpper().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeLowerBound(view.getSpinnerQuery2PHOFWNumLower(), view.getSpinnerQuery2PHOFWNumUpper());
			}
		});
		
		view.getSpinnerQuery2PHENumLower().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeUpperBound(view.getSpinnerQuery2PHENumLower(), view.getSpinnerQuery2PHENumUpper());
			}
		});
		
		view.getSpinnerQuery2PHENumUpper().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeLowerBound(view.getSpinnerQuery2PHENumLower(), view.getSpinnerQuery2PHENumUpper());
			}
		});
		
		view.getSpinnerQuery2PHIPNumLower().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeUpperBound(view.getSpinnerQuery2PHIPNumLower(), view.getSpinnerQuery2PHIPNumUpper());
			}
		});
		
		view.getSpinnerQuery2PHIPNumUpper().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeLowerBound(view.getSpinnerQuery2PHIPNumLower(), view.getSpinnerQuery2PHIPNumUpper());
			}
		});
		
		view.getSpinnerQuery2PHSNumLower().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeUpperBound(view.getSpinnerQuery2PHSNumLower(), view.getSpinnerQuery2PHSNumUpper());
			}
		});
		
		view.getSpinnerQuery2PHSNumUpper().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeLowerBound(view.getSpinnerQuery2PHSNumLower(), view.getSpinnerQuery2PHSNumUpper());
			}
		});
		
		view.getSpinnerQuery2PHLNumLower().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeUpperBound(view.getSpinnerQuery2PHLNumLower(), view.getSpinnerQuery2PHLNumUpper());
			}
		});
		
		view.getSpinnerQuery2PHLNumUpper().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeLowerBound(view.getSpinnerQuery2PHLNumLower(), view.getSpinnerQuery2PHLNumUpper());
			}
		});
		
		view.getSpinnerQuery2OtherProgramsLower().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeUpperBound(view.getSpinnerQuery2OtherProgramsLower(), view.getSpinnerQuery2OtherProgramsUpper());
			}
		});
		
		view.getSpinnerQuery2OtherProgramsUpper().addChangeListener(new ChangeListener(){
			@Override
			public void stateChanged(ChangeEvent arg0) {
				changeLowerBound(view.getSpinnerQuery2OtherProgramsLower(), view.getSpinnerQuery2OtherProgramsUpper());
			}
		});
		
		view.getButtonQuery2Query().addMouseListener(new MouseAdapter(){
			public void mouseClicked(MouseEvent e) {
				
				String sql = query2Builder();
				System.out.println(sql);
				
				long startTime = System.nanoTime();
				facadeDatabase.getResult(sql, modelTable);
				long endTime = System.nanoTime() - startTime;
				double seconds = endTime / 1.0E09;
				
				view.getLabelQuery2Status().setText("Running time: " + seconds + " seconds");
				DefaultTableModel dtm = new DefaultTableModel(modelTable.getData(), modelTable.getColumnName());
				view.getTableQuery2ResultTable().setModel(dtm);
			}
		});
	}
	
	public void changeUpperBound(JSpinner lowerSpinner, JSpinner upperSpinner){
		int lower = Integer.parseInt(lowerSpinner.getValue().toString());
		int upper = Integer.parseInt(upperSpinner.getValue().toString());
		if(lower > upper)
			upperSpinner.setValue(lower);
	}
	
	public void changeLowerBound(JSpinner lowerSpinner, JSpinner upperSpinner){
		int lower = Integer.parseInt(lowerSpinner.getValue().toString());
		int upper = Integer.parseInt(upperSpinner.getValue().toString());
		if(upper < lower)
			lowerSpinner.setValue(upper);
	}
	
	public String appendWhereChecker(String sql){
		String query = sql;
		if(!query.contains("where"))
			query += "where ";
		else
			query += " and ";
		return query;
	}
	
	public String query1Builder(){
		String sql = "Select id as ID, mun as Municipality, zone as Zone, brgy as Barangay, "
				+ "purok as Purok, house_type_o as 'House Type', nbr as 'House Number', "
				+ "roof as Roof, wall as Wall, nofw as 'Number of OFW', nnucfam as 'Number of Families', "
				+ "calam1_hus_aid_o as 'Tumulong Noong May Bagyo', calam2_hus_aid_o as 'Tumulong Noong May Baha', "
				+ "calam3_hus_aid_o as 'Tumulong Noong May Tagtuyot', calam4_hus_aid_o as 'Tumulong Noong Lindol', "
				+ "calam5_hus_aid_o as 'Tumulong Noong Sumabog ang Bulkan', "
				+ "calam6_hus_aid_o as 'Tumulong Noong May Landslide', calam7_hus_aid_o as 'Tumulong Noong May Tsunami', "
				+ "calam8_hus_aid_o as 'Tumulong Noong May Sunog', calam9_hus_aid_o as 'Tumulong Noong May Forest Fire', "
				+ "calam10_hus_aid_o as 'Tumulong Noong May Digmaan' from hpq_hh ";
		
		if(view.getComboBoxQuery1Municipality().getSelectedIndex() != 0){
			sql = appendWhereChecker(sql);
			sql += "mun = " + view.getComboBoxQuery1Municipality().getSelectedItem().toString();
		}
		
		if(view.getComboBoxQuery1Zone().getSelectedIndex() != 0){
			sql = appendWhereChecker(sql);
			sql += "zone = " + view.getComboBoxQuery1Zone().getSelectedItem().toString();
		}
		
		if(view.getComboBoxQuery1Barangay().getSelectedIndex() != 0){
			sql = appendWhereChecker(sql);
			sql += "brgy = " + view.getComboBoxQuery1Barangay().getSelectedItem().toString();
		}
		
		if(view.getComboBoxQuery1Purok().getSelectedIndex() != 0){
			sql = appendWhereChecker(sql);
			sql += "purok = " + view.getComboBoxQuery1Purok().getSelectedItem().toString();
		}
		
		if(view.getComboBoxQuery1HouseType().getSelectedIndex() != 0){
			sql = appendWhereChecker(sql);
			if(view.getComboBoxQuery1HouseType().getSelectedItem().toString().equals("Single"))
				sql += "house_type = 1";
			else if(view.getComboBoxQuery1HouseType().getSelectedItem().toString().equals("Duplex"))
				sql += "house_type = 2";
			else if(view.getComboBoxQuery1HouseType().getSelectedItem().toString().equals("Multi-unit"))
				sql += "house_type = 3";
			else if(view.getComboBoxQuery1HouseType().getSelectedItem().toString().equals("Commercial"))
				sql += "house_type = 4";
			else if(view.getComboBoxQuery1HouseType().getSelectedItem().toString().equals("Others"))
				sql += "house_type = 5";
		}
		
		if(view.getComboBoxQuery1Bagyo().getSelectedIndex() != 0 ){
			sql = appendWhereChecker(sql);
			if(view.getComboBoxQuery1Bagyo().getSelectedItem().toString().equals("Naranasan"))
				sql += "calam1 = " + TRUE;
			else if(view.getComboBoxQuery1Bagyo().getSelectedItem().toString().equals("Hindi Naranasan"))
				sql += "calam1 = " + FALSE;
		}
		
		if(!view.getSpinnerQuery1BagyoFrequencyLower().getValue().toString().equals("-1")){
			sql = appendWhereChecker(sql);
			sql += "calam1_hwmny > " + view.getSpinnerQuery1BagyoFrequencyLower().getValue().toString();
		}
		
		if(!view.getSpinnerQuery1BagyoFrequencyUpper().getValue().toString().equals("-1")){
			sql = appendWhereChecker(sql);
			sql += "calam1_hwmny <= " + view.getSpinnerQuery1BagyoFrequencyUpper().getValue().toString();
		}
		
		if(view.getComboBoxQuery1BagyoAid().getSelectedIndex() != 0){
			sql = appendWhereChecker(sql);
			if(view.getComboBoxQuery1BagyoAid().getSelectedItem().toString().equals("Nakatanggap"))
				sql += "calam1_aid = " + TRUE;
			else if(view.getComboBoxQuery1BagyoAid().getSelectedItem().toString().equals("Hindi Nakatanggap"))
				sql += "calam1_aid = " + FALSE;
		}
		
		if(view.getComboBoxQuery1Baha().getSelectedIndex() != 0 ){
			sql = appendWhereChecker(sql);
			if(view.getComboBoxQuery1Baha().getSelectedItem().toString().equals("Naranasan"))
				sql += "calam2 = " + TRUE;
			else if(view.getComboBoxQuery1Baha().getSelectedItem().toString().equals("Hindi Naranasan"))
				sql += "calam2 = " + FALSE;
		}
		
		if(!view.getSpinnerQuery1BahaFrequencyLower().getValue().toString().equals("-1")){
			sql = appendWhereChecker(sql);
			sql += "calam2_hwmny > " + view.getSpinnerQuery1BahaFrequencyLower().getValue().toString();
		}
		
		if(!view.getSpinnerQuery1BahaFrequencyUpper().getValue().toString().equals("-1")){
			sql = appendWhereChecker(sql);
			sql += "calam2_hwmny <= " + view.getSpinnerQuery1BahaFrequencyUpper().getValue().toString();
		}
		
		if(view.getComboBoxQuery1BahaAid().getSelectedIndex() != 0){
			sql = appendWhereChecker(sql);
			if(view.getComboBoxQuery1BahaAid().getSelectedItem().toString().equals("Nakatanggap"))
				sql += "calam2_aid = " + TRUE;
			else if(view.getComboBoxQuery1BahaAid().getSelectedItem().toString().equals("Hindi Nakatanggap"))
				sql += "calam2_aid = " + FALSE;
		}
		
		if(view.getComboBoxQuery1Tagtuyot().getSelectedIndex() != 0 ){
			sql = appendWhereChecker(sql);
			if(view.getComboBoxQuery1Tagtuyot().getSelectedItem().toString().equals("Naranasan"))
				sql += "calam3 = " + TRUE;
			else if(view.getComboBoxQuery1Tagtuyot().getSelectedItem().toString().equals("Hindi Naranasan"))
				sql += "calam3 = " + FALSE;
		}
		
		if(!view.getSpinnerQuery1TagtuyotFrequencyLower().getValue().toString().equals("-1")){
			sql = appendWhereChecker(sql);
			sql += "calam3_hwmny > " + view.getSpinnerQuery1TagtuyotFrequencyLower().getValue().toString();
		}
		
		if(!view.getSpinnerQuery1TagtuyotFrequencyUpper().getValue().toString().equals("-1")){
			sql = appendWhereChecker(sql);
			sql += "calam3_hwmny <= " + view.getSpinnerQuery1TagtuyotFrequencyUpper().getValue().toString();
		}
		
		if(view.getComboBoxQuery1TagtuyotAid().getSelectedIndex() != 0){
			sql = appendWhereChecker(sql);
			if(view.getComboBoxQuery1TagtuyotAid().getSelectedItem().toString().equals("Nakatanggap"))
				sql += "calam3_aid = " + TRUE;
			else if(view.getComboBoxQuery1TagtuyotAid().getSelectedItem().toString().equals("Hindi Nakatanggap"))
				sql += "calam3_aid = " + FALSE;
		}
		
		if(view.getComboBoxQuery1Lindol().getSelectedIndex() != 0 ){
			sql = appendWhereChecker(sql);
			if(view.getComboBoxQuery1Lindol().getSelectedItem().toString().equals("Naranasan"))
				sql += "calam4 = " + TRUE;
			else if(view.getComboBoxQuery1Lindol().getSelectedItem().toString().equals("Hindi Naranasan"))
				sql += "calam4 = " + FALSE;
		}
		
		if(!view.getSpinnerQuery1LindolFrequencyLower().getValue().toString().equals("-1")){
			sql = appendWhereChecker(sql);
			sql += "calam4_hwmny > " + view.getSpinnerQuery1LindolFrequencyLower().getValue().toString();
		}
		
		if(!view.getSpinnerQuery1LindolFrequencyUpper().getValue().toString().equals("-1")){
			sql = appendWhereChecker(sql);
			sql += "calam4_hwmny <= " + view.getSpinnerQuery1LindolFrequencyUpper().getValue().toString();
		}
		
		if(view.getComboBoxQuery1LindolAid().getSelectedIndex() != 0){
			sql = appendWhereChecker(sql);
			if(view.getComboBoxQuery1LindolAid().getSelectedItem().toString().equals("Nakatanggap"))
				sql += "calam4_aid = " + TRUE;
			else if(view.getComboBoxQuery1LindolAid().getSelectedItem().toString().equals("Hindi Nakatanggap"))
				sql += "calam4_aid = " + FALSE;
		}
		
		if(view.getComboBoxQuery1Bulkan().getSelectedIndex() != 0 ){
			sql = appendWhereChecker(sql);
			if(view.getComboBoxQuery1Bulkan().getSelectedItem().toString().equals("Naranasan"))
				sql += "calam5 = " + TRUE;
			else if(view.getComboBoxQuery1Bulkan().getSelectedItem().toString().equals("Hindi Naranasan"))
				sql += "calam5 = " + FALSE;
		}
		
		if(!view.getSpinnerQuery1BulkanFrequencyLower().getValue().toString().equals("-1")){
			sql = appendWhereChecker(sql);
			sql += "calam5_hwmny > " + view.getSpinnerQuery1BulkanFrequencyLower().getValue().toString();
		}
		
		if(!view.getSpinnerQuery1BulkanFrequencyUpper().getValue().toString().equals("-1")){
			sql = appendWhereChecker(sql);
			sql += "calam5_hwmny <= " + view.getSpinnerQuery1BulkanFrequencyUpper().getValue().toString();
		}
		
		if(view.getComboBoxQuery1BulkanAid().getSelectedIndex() != 0){
			sql = appendWhereChecker(sql);
			if(view.getComboBoxQuery1BulkanAid().getSelectedItem().toString().equals("Nakatanggap"))
				sql += "calam5_aid = " + TRUE;
			else if(view.getComboBoxQuery1BulkanAid().getSelectedItem().toString().equals("Hindi Nakatanggap"))
				sql += "calam5_aid = " + FALSE;
		}
		
		if(view.getComboBoxQuery1Landslide().getSelectedIndex() != 0 ){
			sql = appendWhereChecker(sql);
			if(view.getComboBoxQuery1Landslide().getSelectedItem().toString().equals("Naranasan"))
				sql += "calam6 = " + TRUE;
			else if(view.getComboBoxQuery1Landslide().getSelectedItem().toString().equals("Hindi Naranasan"))
				sql += "calam6 = " + FALSE;
		}
		
		if(!view.getSpinnerQuery1LandslideFrequencyLower().getValue().toString().equals("-1")){
			sql = appendWhereChecker(sql);
			sql += "calam6_hwmny > " + view.getSpinnerQuery1LandslideFrequencyLower().getValue().toString();
		}
		
		if(!view.getSpinnerQuery1LandslideFrequencyUpper().getValue().toString().equals("-1")){
			sql = appendWhereChecker(sql);
			sql += "calam6_hwmny <= " + view.getSpinnerQuery1LandslideFrequencyUpper().getValue().toString();
		}
		
		if(view.getComboBoxQuery1LandslideAid().getSelectedIndex() != 0){
			sql = appendWhereChecker(sql);
			if(view.getComboBoxQuery1LandslideAid().getSelectedItem().toString().equals("Nakatanggap"))
				sql += "calam6_aid = " + TRUE;
			else if(view.getComboBoxQuery1LandslideAid().getSelectedItem().toString().equals("Hindi Nakatanggap"))
				sql += "calam6_aid = " + FALSE;
		}
		
		if(view.getComboBoxQuery1Tsunami().getSelectedIndex() != 0 ){
			sql = appendWhereChecker(sql);
			if(view.getComboBoxQuery1Tsunami().getSelectedItem().toString().equals("Naranasan"))
				sql += "calam7 = " + TRUE;
			else if(view.getComboBoxQuery1Tsunami().getSelectedItem().toString().equals("Hindi Naranasan"))
				sql += "calam7 = " + FALSE;
		}
		
		if(!view.getSpinnerQuery1TsunamiFrequencyLower().getValue().toString().equals("-1")){
			sql = appendWhereChecker(sql);
			sql += "calam7_hwmny > " + view.getSpinnerQuery1TsunamiFrequencyLower().getValue().toString();
		}
		
		if(!view.getSpinnerQuery1TsunamiFrequencyUpper().getValue().toString().equals("-1")){
			sql = appendWhereChecker(sql);
			sql += "calam7_hwmny <= " + view.getSpinnerQuery1TsunamiFrequencyUpper().getValue().toString();
		}
		
		if(view.getComboBoxQuery1TsunamiAid().getSelectedIndex() != 0){
			sql = appendWhereChecker(sql);
			if(view.getComboBoxQuery1TsunamiAid().getSelectedItem().toString().equals("Nakatanggap"))
				sql += "calam7_aid = " + TRUE;
			else if(view.getComboBoxQuery1TsunamiAid().getSelectedItem().toString().equals("Hindi Nakatanggap"))
				sql += "calam7_aid = " + FALSE;
		}
		
		if(view.getComboBoxQuery1Sunog().getSelectedIndex() != 0 ){
			sql = appendWhereChecker(sql);
			if(view.getComboBoxQuery1Sunog().getSelectedItem().toString().equals("Naranasan"))
				sql += "calam8 = " + TRUE;
			else if(view.getComboBoxQuery1Sunog().getSelectedItem().toString().equals("Hindi Naranasan"))
				sql += "calam8 = " + FALSE;
		}
		
		if(!view.getSpinnerQuery1SunogFrequencyLower().getValue().toString().equals("-1")){
			sql = appendWhereChecker(sql);
			sql += "calam8_hwmny > " + view.getSpinnerQuery1SunogFrequencyLower().getValue().toString();
		}
		
		if(!view.getSpinnerQuery1SunogFrequencyUpper().getValue().toString().equals("-1")){
			sql = appendWhereChecker(sql);
			sql += "calam8_hwmny <= " + view.getSpinnerQuery1SunogFrequencyUpper().getValue().toString();
		}
		
		if(view.getComboBoxQuery1SunogAid().getSelectedIndex() != 0){
			sql = appendWhereChecker(sql);
			if(view.getComboBoxQuery1SunogAid().getSelectedItem().toString().equals("Nakatanggap"))
				sql += "calam8_aid = " + TRUE;
			else if(view.getComboBoxQuery1SunogAid().getSelectedItem().toString().equals("Hindi Nakatanggap"))
				sql += "calam8_aid = " + FALSE;
		}
		
		if(view.getComboBoxQuery1ForestFire().getSelectedIndex() != 0 ){
			sql = appendWhereChecker(sql);
			if(view.getComboBoxQuery1ForestFire().getSelectedItem().toString().equals("Naranasan"))
				sql += "calam9 = " + TRUE;
			else if(view.getComboBoxQuery1ForestFire().getSelectedItem().toString().equals("Hindi Naranasan"))
				sql += "calam9 = " + FALSE;
		}
		
		if(!view.getSpinnerQuery1ForestFireFrequencyLower().getValue().toString().equals("-1")){
			sql = appendWhereChecker(sql);
			sql += "calam9_hwmny > " + view.getSpinnerQuery1ForestFireFrequencyLower().getValue().toString();
		}
		
		if(!view.getSpinnerQuery1ForestFireFrequencyUpper().getValue().toString().equals("-1")){
			sql = appendWhereChecker(sql);
			sql += "calam9_hwmny <= " + view.getSpinnerQuery1ForestFireFrequencyUpper().getValue().toString();
		}
		
		if(view.getComboBoxQuery1ForestFireAid().getSelectedIndex() != 0){
			sql = appendWhereChecker(sql);
			if(view.getComboBoxQuery1ForestFireAid().getSelectedItem().toString().equals("Nakatanggap"))
				sql += "calam9_aid = " + TRUE;
			else if(view.getComboBoxQuery1ForestFireAid().getSelectedItem().toString().equals("Hindi Nakatanggap"))
				sql += "calam9_aid = " + FALSE;
		}
		
		if(view.getComboBoxQuery1Digmaan().getSelectedIndex() != 0 ){
			sql = appendWhereChecker(sql);
			if(view.getComboBoxQuery1Digmaan().getSelectedItem().toString().equals("Naranasan"))
				sql += "calam10 = " + TRUE;
			else if(view.getComboBoxQuery1Digmaan().getSelectedItem().toString().equals("Hindi Naranasan"))
				sql += "calam10 = " + FALSE;
		}
		
		if(!view.getSpinnerQuery1DigmaanFrequencyLower().getValue().toString().equals("-1")){
			sql = appendWhereChecker(sql);
			sql += "calam10_hwmny > " + view.getSpinnerQuery1DigmaanFrequencyLower().getValue().toString();
		}
		
		if(!view.getSpinnerQuery1DigmaanFrequencyUpper().getValue().toString().equals("-1")){
			sql = appendWhereChecker(sql);
			sql += "calam10_hwmny <= " + view.getSpinnerQuery1DigmaanFrequencyUpper().getValue().toString();
		}
		
		if(view.getComboBoxQuery1DigmaanAid().getSelectedIndex() != 0){
			sql = appendWhereChecker(sql);
			if(view.getComboBoxQuery1DigmaanAid().getSelectedItem().toString().equals("Nakatanggap"))
				sql += "calam10_aid = " + TRUE;
			else if(view.getComboBoxQuery1DigmaanAid().getSelectedItem().toString().equals("Hindi Nakatanggap"))
				sql += "calam10_aid = " + FALSE;
		}
		
		return sql;
	}
	
	public String query2Builder(){
		String sql = "";
		
		if(view.getComboBoxQuery2Municipality().getSelectedIndex() != 0){
			sql = appendWhereChecker(sql);
			sql += "mun = " + view.getComboBoxQuery2Municipality().getSelectedItem().toString();
		}
		
		if(view.getComboBoxQuery2Zone().getSelectedIndex() != 0){
			sql = appendWhereChecker(sql);
			sql += "zone = " + view.getComboBoxQuery2Zone().getSelectedItem().toString();
		}
		
		if(view.getComboBoxQuery2Barangay().getSelectedIndex() != 0){
			sql = appendWhereChecker(sql);
			sql += "brgy = " + view.getComboBoxQuery2Barangay().getSelectedItem().toString();
		}
		
		if(view.getComboBoxQuery2Purok().getSelectedIndex() != 0){
			sql = appendWhereChecker(sql);
			sql += "purok = " + view.getComboBoxQuery2Purok().getSelectedItem().toString();
		}
		
		if(view.getComboBoxQuery2HouseType().getSelectedIndex() != 0){
			sql = appendWhereChecker(sql);
			if(view.getComboBoxQuery2HouseType().getSelectedItem().toString().equals("Single"))
				sql += "house_type = 1";
			else if(view.getComboBoxQuery2HouseType().getSelectedItem().toString().equals("Duplex"))
				sql += "house_type = 2";
			else if(view.getComboBoxQuery2HouseType().getSelectedItem().toString().equals("Multi-unit"))
				sql += "house_type = 3";
			else if(view.getComboBoxQuery2HouseType().getSelectedItem().toString().equals("Commercial"))
				sql += "house_type = 4";
			else if(view.getComboBoxQuery2HouseType().getSelectedItem().toString().equals("Others"))
				sql += "house_type = 5";
		}
		
		
		
		return sql;
	}
	
}
